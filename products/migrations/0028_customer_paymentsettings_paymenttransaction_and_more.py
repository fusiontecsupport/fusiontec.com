# Generated by Django 5.2.4 on 2025-08-09 05:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0027_merge_20250809_1052'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('mobile', models.CharField(db_index=True, max_length=20, unique=True)),
                ('has_gst', models.BooleanField(default=True)),
                ('gst_number', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('setting_type', models.CharField(choices=[('razorpay', 'Razorpay'), ('qr_code', 'UPI QR Code'), ('bank_transfer', 'Bank Transfer')], max_length=20, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('razorpay_key_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_key_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_button_id', models.CharField(blank=True, max_length=100, null=True)),
                ('upi_id', models.CharField(blank=True, max_length=100, null=True)),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='payment/qr/')),
                ('account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_number', models.CharField(blank=True, max_length=30, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Payment Setting',
                'verbose_name_plural': 'Payment Settings',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=50)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('basic_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Base price without taxes', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cgst', models.DecimalField(decimal_places=2, default=0, help_text='Central GST amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('sgst', models.DecimalField(decimal_places=2, default=0, help_text='State GST amount', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.DecimalField(decimal_places=2, default=0, editable=False, help_text='Total price including taxes', max_digits=10)),
                ('token_name', models.CharField(blank=True, help_text='Name of the token/license', max_length=255, null=True)),
                ('token_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Token/license cost', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('installing_charges', models.DecimalField(blank=True, decimal_places=2, help_text='Installation charges', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('item_code', models.CharField(help_text='Unique item identifier within the type', max_length=50)),
                ('item_name', models.CharField(help_text='Name of the product/service', max_length=255)),
                ('item_category', models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('upgrade', 'Upgrade'), ('plan', 'Subscription Plan'), ('addon', 'Add-on')], default='product', help_text='Category of this item', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Item description', null=True)),
                ('features', models.TextField(blank=True, help_text='Key features of this item', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this item is available')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for display')),
                ('billing_cycle', models.CharField(blank=True, default='Billed for 1 Year | Per Device', help_text='Billing frequency and unit', max_length=255, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price before discount', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('team_name', models.CharField(default='For Sales Team', help_text='Team responsible for this item', max_length=255)),
            ],
            options={
                'verbose_name': 'Product Item',
                'verbose_name_plural': 'Product Items',
                'ordering': ['product_type', 'display_order', 'item_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_code', models.CharField(choices=[('tally', 'Tally Software'), ('emudhra', 'E-Mudhra'), ('fusiontec', 'FusionTec Software'), ('biz', 'Business Intelligence')], help_text='Unique product identifier', max_length=10, unique=True)),
                ('product_name', models.CharField(help_text='Display name of the product', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Product description', null=True)),
                ('image', models.ImageField(blank=True, help_text='Product logo/image', null=True, upload_to='products/master/')),
                ('website_link', models.URLField(blank=True, help_text='Official product website', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this product is available')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for display on website')),
            ],
            options={
                'verbose_name': 'Product Master',
                'verbose_name_plural': 'Product Masters',
                'ordering': ['display_order', 'product_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type_code', models.CharField(help_text='Unique type identifier within the product', max_length=50)),
                ('type_name', models.CharField(help_text='Name of the product type', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Type description', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this type is available')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for display')),
            ],
            options={
                'verbose_name': 'Product Type',
                'verbose_name_plural': 'Product Types',
                'ordering': ['product_master', 'display_order', 'type_name'],
            },
        ),
        migrations.CreateModel(
            name='QuoteSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('basic_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('token_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('installing_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.DeleteModel(
            name='BankTransferInfo',
        ),
        migrations.RemoveField(
            model_name='biz_plan',
            name='biz_4',
        ),
        migrations.RemoveField(
            model_name='biz_service',
            name='biz_4',
        ),
        migrations.RemoveField(
            model_name='biz_product',
            name='biz_4',
        ),
        migrations.DeleteModel(
            name='BizPriceListSubmission',
        ),
        migrations.DeleteModel(
            name='CompanyPaymentInfoQR',
        ),
        migrations.RemoveField(
            model_name='emudhra_product',
            name='emudhra_2',
        ),
        migrations.DeleteModel(
            name='EmudhraPriceListSubmission',
        ),
        migrations.RemoveField(
            model_name='fusiontec_software',
            name='fusiontec_3',
        ),
        migrations.RemoveField(
            model_name='fusiontec_service',
            name='fusiontec_3',
        ),
        migrations.RemoveField(
            model_name='fusiontec_product',
            name='fusiontec_3',
        ),
        migrations.DeleteModel(
            name='FusiontecPriceListSubmission',
        ),
        migrations.DeleteModel(
            name='RazorpayInfo',
        ),
        migrations.DeleteModel(
            name='RazorpayTransactionForm',
        ),
        migrations.RemoveField(
            model_name='tally_product',
            name='tally_1',
        ),
        migrations.RemoveField(
            model_name='tally_software_service',
            name='tally_1',
        ),
        migrations.RemoveField(
            model_name='tally_upgrade',
            name='tally_1',
        ),
        migrations.DeleteModel(
            name='TallyPriceListSubmission',
        ),
        migrations.AlterModelOptions(
            name='applicant',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='contactsubmission',
            options={'ordering': ['-created_at']},
        ),
        migrations.RenameField(
            model_name='applicant',
            old_name='submitted_at',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='contactsubmission',
            old_name='submitted_at',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='applicant',
            name='aadhar_number',
        ),
        migrations.RemoveField(
            model_name='applicant',
            name='email',
        ),
        migrations.RemoveField(
            model_name='applicant',
            name='mobile_number',
        ),
        migrations.RemoveField(
            model_name='applicant',
            name='name',
        ),
        migrations.RemoveField(
            model_name='applicant',
            name='pan_number',
        ),
        migrations.AddField(
            model_name='applicant',
            name='admin_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='applicant',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='applicant',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='contactsubmission',
            name='admin_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='contactsubmission',
            name='status',
            field=models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='new', max_length=20),
        ),
        migrations.AddField(
            model_name='contactsubmission',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddIndex(
            model_name='contactsubmission',
            index=models.Index(fields=['email', 'created_at'], name='products_co_email_70c759_idx'),
        ),
        migrations.AddIndex(
            model_name='contactsubmission',
            index=models.Index(fields=['status', 'created_at'], name='products_co_status_3d64ee_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='products_cu_email_3d69ae_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['mobile'], name='products_cu_mobile_f47170_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['gst_number'], name='products_cu_gst_num_9b7dbd_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['state', 'district'], name='products_cu_state_081efb_idx'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='customer',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='products.customer'),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['customer', 'created_at'], name='products_ap_custome_6a9580_idx'),
        ),
        migrations.AddIndex(
            model_name='applicant',
            index=models.Index(fields=['status', 'created_at'], name='products_ap_status_6c3c14_idx'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customer'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='product_master',
            field=models.ForeignKey(help_text='Main product this type belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='products.productmaster'),
        ),
        migrations.AddField(
            model_name='productitem',
            name='product_type',
            field=models.ForeignKey(help_text='Product type this item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='product_items', to='products.producttype'),
        ),
        migrations.AddField(
            model_name='quotesubmission',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='products.customer'),
        ),
        migrations.AddField(
            model_name='quotesubmission',
            name='product_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_submissions', to='products.productitem'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='quote',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.quotesubmission'),
        ),
        migrations.DeleteModel(
            name='Biz_Plan',
        ),
        migrations.DeleteModel(
            name='Biz_Service',
        ),
        migrations.DeleteModel(
            name='Biz_4',
        ),
        migrations.DeleteModel(
            name='biz_product',
        ),
        migrations.DeleteModel(
            name='Emudhra_2',
        ),
        migrations.DeleteModel(
            name='Emudhra_product',
        ),
        migrations.DeleteModel(
            name='Fusiontec_Software',
        ),
        migrations.DeleteModel(
            name='Fusiontec_Service',
        ),
        migrations.DeleteModel(
            name='Fusiontec_3',
        ),
        migrations.DeleteModel(
            name='Fusiontec_product',
        ),
        migrations.DeleteModel(
            name='Tally_Product',
        ),
        migrations.DeleteModel(
            name='Tally_Software_Service',
        ),
        migrations.DeleteModel(
            name='Tally_1',
        ),
        migrations.DeleteModel(
            name='Tally_Upgrade',
        ),
        migrations.AlterUniqueTogether(
            name='producttype',
            unique_together={('product_master', 'type_code')},
        ),
        migrations.AlterUniqueTogether(
            name='productitem',
            unique_together={('product_type', 'item_code')},
        ),
        migrations.AddIndex(
            model_name='quotesubmission',
            index=models.Index(fields=['customer', 'created_at'], name='products_qu_custome_463f60_idx'),
        ),
        migrations.AddIndex(
            model_name='quotesubmission',
            index=models.Index(fields=['status', 'created_at'], name='products_qu_status_ee04f4_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['customer', 'created_at'], name='products_pa_custome_94ed8d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status', 'created_at'], name='products_pa_status_42b540_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['razorpay_payment_id'], name='products_pa_razorpa_28a27a_idx'),
        ),
    ]
